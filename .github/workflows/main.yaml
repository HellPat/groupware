name: Tests

# Todo: try `nektos/act` to run the suite locally
#       This might avoid duplication and make Justfile obsolete
#       https://github.com/nektos/act
on:
    push:
    merge_group:
jobs:
    # TODO: build container once, before running static-analysis
    static-analysis:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: nix-shell --pure --run "bash -euxo pipefail {0}"
        strategy:
            fail-fast: false
            matrix:
                check:
                    - name: psalm
                      setup: ./composer install
                      cmd: vendor/bin/psalm --output-format=github
                    - name: phpstan
                      setup: ./composer install
                      cmd: vendor/bin/phpstan --error-format=github
                    - name: ecs
                      setup: ./composer install
                      cmd: vendor/bin/ecs
                    - name: prettier
                      setup: pnpm install --frozen-lockfile
                      cmd: pnpm prettier . --check
                    - name: twig
                      setup: ./composer install
                      cmd: bin/console lint:twig templates --no-interaction --format=github
                    - name: container
                      setup: ./composer install
                      cmd: bin/console lint:container --no-interaction
                    - name: xliff
                      setup: ./composer install
                      cmd: bin/console lint:xliff translations --no-interaction --format=github
                    - name: composer-validate
                      setup: ./composer install
                      cmd: ./composer validate composer.json --no-check-publish
                    - name: security-check
                      setup: ./composer install
                      cmd: symfony security:check
                    - name: rector
                      setup: ./composer install
                      cmd: vendor/bin/rector --dry-run
                    - name: php-lint
                      setup: ./composer install
                      cmd: vendor/bin/parallel-lint --exclude .git --exclude var --exclude vendor .
                    # TODO: add more ci-checks
                    #      bin/console lint:yaml *.yaml --parse-tags --no-interaction --format=github
                    #      XDEBUG_MODE=off bin/composer-require-checker --no-interaction --config-file=$PWD/composer-require-checker.json
                    #      vendor/bin/config-transformer --dry-run
                    #      bin/console debug:translation --all --only-missing en
                    #      cd .. && pnpm spectral lint openapi.yaml {{ if output == "github" { "--format=github-actions" } else { "" } }
        steps:
            - uses: actions/checkout@v4
            - uses: cachix/install-nix-action@v26
              with:
                  nix_path: nixpkgs=channel:nixos-unstable
            - run: ${{ matrix.check.setup }}
            - name: ${{ matrix.check.cmd }}
              run: ${{ matrix.check.cmd }}

    phpunit:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: nix-shell --pure --run "bash -euxo pipefail {0}"
        steps:
            - uses: actions/checkout@v4
            - uses: cachix/install-nix-action@v26
              with:
                  nix_path: nixpkgs=channel:nixos-unstable
            # TODO: cache the build
            - run: just setup-backend
            - run: XDEBUG_MODE=coverage vendor/bin/phpunit --order-by=random --stop-on-error --stop-on-failure

    functional-tests:
        runs-on: ubuntu-latest
        env:
            STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
            CYPRESS_STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
        steps:
            - uses: actions/checkout@v4
            - uses: cachix/install-nix-action@v26
              with:
                  nix_path: nixpkgs=channel:nixos-unstable
            - uses: pnpm/action-setup@v2
              with:
                  run_install: false
            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
            # TODO: add cache for node_modules
            - name: Install dependencies
              run: pnpm install --frozen-lockfile --strict-peer-dependencies
            - shell: nix-shell --pure --keep STRIPE_API_KEY --run "bash -euxo pipefail {0}"
              run: just setup
            - shell: nix-shell --pure --keep STRIPE_API_KEY --run "bash -euxo pipefail {0}"
              run: just start-background
            - shell: nix-shell --pure --keep STRIPE_API_KEY --run "bash -euxo pipefail {0}"
              run: bin/console doctrine:migrations:migrate --allow-no-migration --no-interaction
            - uses: cypress-io/github-action@v6
